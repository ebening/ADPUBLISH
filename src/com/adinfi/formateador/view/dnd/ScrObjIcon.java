package com.adinfi.formateador.view.dnd;

import com.adinfi.formateador.bos.ModuleSectionBO;
import com.adinfi.formateador.bos.ObjectInfoBO;
import com.adinfi.formateador.util.GlobalDefines;
import com.adinfi.formateador.util.Utilerias;
import com.adinfi.formateador.view.DlgObjects;
import com.adinfi.formateador.view.ImageToolTip;
import com.adinfi.formateador.view.administration.Disclosure;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JToolTip;

/**
 *
 * @author Guillermo Trejo
 */
public class ScrObjIcon extends javax.swing.JPanel {

    private Integer position;
    private ScrCell cellParent;
    private final ObjectInfoBO objectInfo;
    private Disclosure disclosure;
    private JPanel jPanel;
    private ModuleSectionBO moduleSectionBO;
    private DlgObjects dlgObject;
    
    public ScrObjIcon(ScrCell cellParent, ObjectInfoBO objectInfo, Disclosure disclosure, ModuleSectionBO moduleSectionBO, JPanel jPanel, DlgObjects dlgObject) {
        this.disclosure= disclosure;
        this.jPanel= jPanel;
        this.moduleSectionBO= moduleSectionBO;
        this.dlgObject= dlgObject;

        this.cellParent = cellParent;
        this.objectInfo = objectInfo;
        setName(objectInfo.getFile());
        initComponents();
        initScreen();
    }

    /**
     * Creates new form ScrObjIcon
     *
     * @param cellParent
     * @param objectInfo
     */
    public ScrObjIcon(ScrCell cellParent, ObjectInfoBO objectInfo) {
        this.cellParent = cellParent;
        this.objectInfo = objectInfo;
        setName(objectInfo.getFile());
        /*
         Obtener la imagen 
        
         */
        initComponents();
        initScreen();
    }

    public ScrCell getCellParent() {
        return cellParent;
    }

    public void setCellParent(ScrCell cellParent) {
        this.cellParent = cellParent;
    }

    public void updateObject() {
        if(disclosure!=null){
            this.disclosure.updateObject(objectInfo,moduleSectionBO,jPanel,dlgObject);
        }else{
            this.cellParent.updateObject(objectInfo);
        }
    }

    public void deleteObject() {
        this.cellParent.deletObject(objectInfo.getObjectId());
        if(disclosure!=null){
            this.disclosure.refreshObjects(moduleSectionBO,jPanel,dlgObject);
        }
    }

    protected final void initScreen() {
        setImage();
        setPreferredSize(new Dimension(80, 86));
        setMinimumSize(new Dimension(80, 86));
        setMaximumSize(new Dimension(80, 86));
    }

    public void setImage() {
        Utilerias.ICONS icon = null;
        switch (objectInfo.getObjType()) {
            case GlobalDefines.OBJ_TYPE_EXCEL:
                icon = Utilerias.ICONS.EXCEL;
                break;
            case GlobalDefines.OBJ_TYPE_IMAGE:
                icon = Utilerias.ICONS.IMAGE;
                break;
            case GlobalDefines.OBJ_TYPE_VIDEO:
                icon = Utilerias.ICONS.VIDEO;
                break;
            case GlobalDefines.OBJ_TYPE_CALENDAR://ADD CAFH: Icono de Calendario
                //icon = Utilerias.ICONS.VIDEO;
                break;
        }

        try {
            ImageIcon ii = Utilerias.getImageIcon(icon);
            jButton1.setIcon(ii);
        } catch (Exception e) {
            Utilerias.logger(getClass()).error(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton() {
            @Override
            public JToolTip createToolTip() {
                return new ImageToolTip(getImage());
            }
        };

        setBackground(java.awt.Color.gray);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setMaximumSize(new java.awt.Dimension(51, 55));
        setPreferredSize(new java.awt.Dimension(42, 50));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close2.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton1.setToolTipText("");
        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/camera1.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.setPreferredSize(new java.awt.Dimension(41, 43));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        updateObject();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        deleteObject();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        //jButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        //jButton1.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_jButton1MouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables

    public Integer getPosition() {
        return position;
    }

    public void setPosition(Integer position) {
        this.position = position;
    }

    @Override
    public JToolTip createToolTip() {

        return new ImageToolTip(getImage());
    }

    private BufferedImage image = null;

    private synchronized BufferedImage getImage() {
        if (image == null) {
            try {
                image = objectInfo.getImageThumb() == null ? objectInfo.getImage() : objectInfo.getImageThumb();//ImageIO.read(new File(objectInfo.getFile()));
            } catch (Exception ex) {
                Utilerias.logger(getClass()).info(ex);
            }
        }
        return image;
    }

    public ObjectInfoBO getObjectInfo() {
        return objectInfo;
    }
    
    public JPanel getJPanel(){
        return jPanel;
    }

}
